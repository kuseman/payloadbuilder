{
  "name": "Joins",
  "catalogs": [
    {
      "alias": "c",
      "tables": [
        {
          "name": "source",
          "columns": [ "col1", "col2" ],
          "rows": [
            [1, 2],
            [3, 4],
            [5, 6]
          ]
        },
        {
          "name": "table",
          "columns": [ "col1", "row_id" ],
          "rows": [
            [1, 1],
            [1, 2],
            [3, 3],
            [3, 4],
            [3, 5],
            [5, 6],
            [7, 7]
          ]
        },
        {
          "name": "article",
          "columns": [ "col1", "col2", "col3", "art_id" ],
          "rows": [
            [1, 2, "row1", 1],
            [3, 4, "row2", 2],
            [7, 8, "row3", 3],
            [6, 9, "row4", 4]
          ]
        },
        {
          "name": "article_property",
          "columns": ["art_id", "propertykey_id", "propertyvalue_id"],
          "rows": [
            [1, 1, 1],
            [1, 1, 2],
            [3, 1, 1]
          ]
        },
        {
          "name": "propertykey",
          "columns": ["propertykey_id", "name"],
          "rows": [
            [1, "key_name_1"]
          ]
        },
        {
          "name": "propertyvalue",
          "columns": ["propertyvalue_id", "value"],
          "rows": [
            [1, "value_1"],
            [2, "value_2"]
          ]
        },
        {
          "name": "shopcart",
          "columns": [ "index", "id", "stockhouses" ],
          "rows": [
            ["idx1", 101, [ { "sku_id": 1, "wareh_id": 1, "qty": 1 }, { "sku_id": 2, "wareh_id": 1, "qty": 2 } ]],
            ["idx1", 201, [ { "sku_id": 2, "wareh_id": 2, "qty": 1 }, { "sku_id": 3, "wareh_id": 1, "qty": 1 } ]],
            ["idx2", 301, [ { "sku_id": 1, "wareh_id": 1, "qty": 1 }, { "sku_id": 3, "wareh_id": 2, "qty": 2 } ]],
            ["idx1", 401, [ { "sku_id": 1, "wareh_id": 1, "qty": 1 }, { "sku_id": 3, "wareh_id": 1, "qty": 2 } ]]
          ]
        },
        {
          "name": "reservation",
          "columns": [ "index", "id", "stockhouses" ],
          "rows": [
            ["idx1", 1, [ { "wareh_id": 1, "qty": 1 } ]],
            ["idx2", 2, [ { "wareh_id": 2, "qty": 1 } ]]
          ]
        },
        {
           "name": "pvalues",
           "columns": ["pvalue"],
           "rows": [
             [ 1 ],
             [ 2 ]
           ]
        }
      ]
    }
  ],
  "cases": [
    {
      "name": "Inner join, asterisk select",
      "query": [
        "select * ",
        "from source s ",
        "inner join article a ",
        "  on a.col1 = s.col1"
      ],
      "expectedResultSets": [
        [
          [{ "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col3", "value": "row1" }, { "key": "art_id", "value": 1 }],
          [{ "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col3", "value": "row2" }, { "key": "art_id", "value": 2 }]
        ]
      ]
    },
    {
      "name": "Inner join, asterisk alias select 2",
      "query": [
        "select a.* ",
        "from source s ",
        "inner join article a ",
        "  on a.col1 = s.col1"
      ],
      "expectedResultSets": [
        [
          [{ "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col3", "value": "row1" }, { "key": "art_id", "value": 1 }],
          [{ "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col3", "value": "row2" }, { "key": "art_id", "value": 2 }]
        ]
      ]
    },
    {
      "name": "Inner join with group by, project both agg and non agg cols. ",
      "query": [
        "select s.col1, s.col2, a.col1, a.col2, a.col3, a.art_id ",
        "from source s ",
        "inner join article a ",
        "  on a.col1 = s.col1 ",
        "group by s.col1, a.col2 "
      ],
      "expectedResultSets": [
        [
          [{ "key": "col1", "value": 1 }, { "key": "col2", "value": [2] }, { "key": "col1", "value": [1] }, { "key": "col2", "value": 2 }, { "key": "col3", "value": ["row1"] }, { "key": "art_id", "value": [1] }],
          [{ "key": "col1", "value": 3 }, { "key": "col2", "value": [4] }, { "key": "col1", "value": [3] }, { "key": "col2", "value": 4 }, { "key": "col3", "value": ["row2"] }, { "key": "art_id", "value": [2] }]
        ]
      ]
    },
    {
      "name": "Batch repeat operator, asterisk select",
      "query": [
        "select s.col1, s.col2, a.col1, a.col2, a.col3, a.art_id ",
        "from source s with (batch_limit=1)",
        "inner join article a ",
        "  on a.col1 = s.col1 ",
        "group by s.col1, a.col2 "
      ],
      "expectedResultSets": [
        [
          [{ "key": "col1", "value": 1 }, { "key": "col2", "value": [2] }, { "key": "col1", "value": [1] }, { "key": "col2", "value": 2 }, { "key": "col3", "value": ["row1"] }, { "key": "art_id", "value": [1] }],
          [{ "key": "col1", "value": 3 }, { "key": "col2", "value": [4] }, { "key": "col1", "value": [3] }, { "key": "col2", "value": 4 }, { "key": "col3", "value": ["row2"] }, { "key": "art_id", "value": [2] }]
        ]
      ]
    },
    {
      "name": "Self join 3, asterisk select",
      "query": [
        "select * ",
        "from source s ",
        "inner join source s1 ",
        "  on s1.col1 = s.col1 ",
        "inner join source s2 ",
        "  on s2.col1 = s1.col1"
      ],
      "expectedResultSets": [
        [
          [{ "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }],
          [{ "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }],
          [{ "key": "col1", "value": 5 }, { "key": "col2", "value": 6 }, { "key": "col1", "value": 5 }, { "key": "col2", "value": 6 }, { "key": "col1", "value": 5 }, { "key": "col2", "value": 6 }]
        ]
      ]
    },
    {
      "name": "join 3 tables without populate multiple rows",
      "query": [
        "select * ",
        "from source s ",
        "inner join article a ",
        "  on a.col1 = s.col1 ",
        "inner join \"table\" t ",
        "  on t.col1 = a.col1"
      ],
      "expectedResultSets": [
        [
          [{ "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col3", "value": "row1" }, { "key": "art_id", "value": 1 }, { "key": "col1", "value": 1 }, { "key": "row_id", "value": 1 }],
          [{ "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col3", "value": "row1" }, { "key": "art_id", "value": 1 }, { "key": "col1", "value": 1 }, { "key": "row_id", "value": 2 }],
          [{ "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col3", "value": "row2" }, { "key": "art_id", "value": 2 }, { "key": "col1", "value": 3 }, { "key": "row_id", "value": 3 }],
          [{ "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col3", "value": "row2" }, { "key": "art_id", "value": 2 }, { "key": "col1", "value": 3 }, { "key": "row_id", "value": 4 }],
          [{ "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col3", "value": "row2" }, { "key": "art_id", "value": 2 }, { "key": "col1", "value": 3 }, { "key": "row_id", "value": 5 }]
        ]
      ]
    },
    {
      "name": "Join sub queries multiple rows",
      "query": [
        "select * ",
        "from source s ",
        "inner join article a ",
        "  on a.col1 = s.col1 ",
        "inner join ",
        "( ",
        "  select s2.col1, s2.col2, t.col1 col3, t.row_id ",
        "  from source s2 ",
        "  inner join \"table\" t ",
        "    on t.col1 = s2.col1 ",
        ") s4 ",
        "  on s4.col1 = s.col1"
      ],
      "expectedResultSets": [
        [
          [{ "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col3", "value": "row1" }, { "key": "art_id", "value": 1 }, { "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col3", "value": 1 }, { "key": "row_id", "value": 1 }],
          [{ "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col3", "value": "row1" }, { "key": "art_id", "value": 1 }, { "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col3", "value": 1 }, { "key": "row_id", "value": 2 }],
          [{ "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col3", "value": "row2" }, { "key": "art_id", "value": 2 }, { "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col3", "value": 3 }, { "key": "row_id", "value": 3 }],
          [{ "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col3", "value": "row2" }, { "key": "art_id", "value": 2 }, { "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col3", "value": 3 }, { "key": "row_id", "value": 4 }],
          [{ "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col3", "value": "row2" }, { "key": "art_id", "value": 2 }, { "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col3", "value": 3 }, { "key": "row_id", "value": 5 }]
        ]
      ]
    },
    {
      "name": "Join with single sub query and populate",
      "query": [
        "select t.map(x -> x.row_id) ids, s.col1 ",
        "from source s ",
        "inner populate join ",
        "( ",
        "  select * ",
        "  from \"table\" t ",
        ") t ",
        "  on t.col1 = s.col1 ",
        "order by s.col1"
      ],
      "expectedResultSets": [
        [
          [{ "key": "ids", "value": [1, 2] }   , { "key": "col1", "value": 1 }],
          [{ "key": "ids", "value": [3, 4, 5] }, { "key": "col1", "value": 3 }],
          [{ "key": "ids", "value": [6] }      , { "key": "col1", "value": 5 }]
        ]
      ]
    },
    {
      "name": "Self Join sub query",
      "query": [
        "select * ",
        "from source s ",
        "inner join source s1 ",
        "  on s1.col1 = s.col1 ",
        "inner join ",
        "( ",
        "  select s2.col1, s2.col2, s3.col1 col3, s3.col2 col4 ",
        "  from source s2 ",
        "  inner join source s3 ",
        "    on s3.col1 = s2.col1 ",
        ") s4 ",
        "  on s4.col1 = s.col1"
      ],
      "expectedResultSets": [
        [
          [{ "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col3", "value": 1 }, { "key": "col4", "value": 2 }],
          [{ "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col3", "value": 3 }, { "key": "col4", "value": 4 }],
          [{ "key": "col1", "value": 5 }, { "key": "col2", "value": 6 }, { "key": "col1", "value": 5 }, { "key": "col2", "value": 6 }, { "key": "col1", "value": 5 }, { "key": "col2", "value": 6 }, { "key": "col3", "value": 5 }, { "key": "col4", "value": 6 }]
        ]
      ]
    },
    {
      "name": "Self join 3, asterisk select",
      "query": [
        "select * from source s inner join source s1 on s1.col1 = s.col1 inner join source s2 on s2.col1 = s1.col1"
      ],
      "expectedResultSets": [
        [
          [{ "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }],
          [{ "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }],
          [{ "key": "col1", "value": 5 }, { "key": "col2", "value": 6 }, { "key": "col1", "value": 5 }, { "key": "col2", "value": 6 }, { "key": "col1", "value": 5 }, { "key": "col2", "value": 6 }]
        ]
      ]
    },
    {
      "name": "Inner join, asterisk alias select",
      "query": [
        "select s.* from source s inner join article a on a.col1 = s.col1"
      ],
      "expectedResultSets": [
        [
          [{ "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }],
          [{ "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }]
        ]
      ]
    },
    {
      "name": "Left join with grouped by sub query",
      "description": [
        "x.pk[0].name[0]   =>  x is an Object of a populated join, pk is a group by column and hence an Array of Tables",
        "                      and we subscript to get the Table at row 0, then we dereference it with 'name' giving us ",
        "                      an array of 'names' and we subscript it to get the element at index 0",
        "",
        "y.value[0]        =>  y is an Array of Tables (y => x.pv is a group by column and hence an Array of Tables), ",
        "                      we feed it to a lambda function then it gets a Table ",
        "                      then we dereference it with 'value' giving us a an Array that we subscript to get us ",
        "                      element at index 0"
      ],
      "query": [
        "select a.art_id, ap.map(x -> array(x.pk[0].name[0], x.pv.map(y -> y.value[0]))) properties ",
        "",
        "from article a",
        "left populate join ",
        "( ",
        "  select ap.art_id, ap.propertykey_id, pk, pv ",
        "  from article_property ap ",
        "  inner populate join propertykey pk ",
        "    on pk.propertykey_id = ap.propertykey_id ",
        "  inner populate join propertyvalue pv ",
        "    on pv.propertyvalue_id = ap.propertyvalue_id ",
        "  group by ap.art_id, ap.propertykey_id ",
        ") ap ",
        "  on ap.art_id = a.art_id ",
        "order by a.art_id "
      ],
      "expectedResultSets": [
        [
           [{ "key": "art_id", "value": 1 }, { "key": "properties", "value": [["key_name_1", ["value_1", "value_2"]]] }],
           [{ "key": "art_id", "value": 2 }, { "key": "properties", "value": null }],
           [{ "key": "art_id", "value": 3 }, { "key": "properties", "value": [["key_name_1", ["value_1"]]] }],
           [{ "key": "art_id", "value": 4 }, { "key": "properties", "value": null }]
        ]
      ]
    },
    {
      "name": "Inner join, with dereference and subscript",
      "query": [
        "select s.col1, ",
        "x[0].row_id row_id_1,   -- first joined row ",
        "x[0].col3 col3_1,       -- first joined rows ",
        "x[1].row_id row_id_2,   -- second joined row ",
        "x[1].col3 col3_2        -- second joined rows ",
        "from source s ",
        "inner populate join ",
        "(",
        "  select t.col1 t_col1, * ",
        "  from \"table\" t ",
        "  left join article a  ",
        "    on a.col1 = t.row_id ",
        ") x ",
        "  on x.t_col1 = s.col1 ",
        "order by 1"
      ],
      "expectedResultSets": [
        [
          [{ "key": "col1", "value": 1 }, { "key": "row_id_1", "value": 1 }, { "key": "col3_1", "value": "row1" }, { "key": "row_id_2", "value": 2 }   , { "key": "col3_2", "value": null }],
          [{ "key": "col1", "value": 3 }, { "key": "row_id_1", "value": 3 }, { "key": "col3_1", "value": "row2" }, { "key": "row_id_2", "value": 4 }   , { "key": "col3_2", "value": null }],
          [{ "key": "col1", "value": 5 }, { "key": "row_id_1", "value": 6 }, { "key": "col3_1", "value": "row4" }, { "key": "row_id_2", "value": null }, { "key": "col3_2", "value": null }]
        ]
      ]
    },
    {
      "name": "Inner join, with 2 sub queries",
      "query": [
        "select s.col1 scol1, x.col1, x.col3, x1.col1, x1.col3 ",
        "from source s ",
        "inner populate join ",
        "(",
        "  select t.col1, a.col3 ",
        "  from \"table\" t ",
        "  left join article a ",
        "    on a.col1 = t.row_id ",
        ") x ",
        "  on x.col1 = s.col1 ",
        "inner populate join ",
        "(",
        "  select t.col1, a.col3 ",
        "  from \"table\" t ",
        "  left join article a ",
        "    on a.col1 = t.row_id ",
        ") x1 ",
        "  on x1.col1 = s.col1 ",
        "order by scol1"
      ],
      "expectedResultSets": [
        [
          [{ "key": "scol1", "value": 1 }, { "key": "col1", "value": [ 1, 1 ] },    { "key": "col3", "value": [ "row1", null ] },       { "key": "col1", "value": [ 1, 1 ] },    { "key": "col3", "value": [ "row1", null ] }],
          [{ "key": "scol1", "value": 3 }, { "key": "col1", "value": [ 3, 3, 3 ] }, { "key": "col3", "value": [ "row2", null, null ] }, { "key": "col1", "value": [ 3, 3, 3 ] }, { "key": "col3", "value": [ "row2", null, null ] }],
          [{ "key": "scol1", "value": 5 }, { "key": "col1", "value": [ 5 ] },       { "key": "col3", "value": [ "row4" ] },             { "key": "col1", "value": [ 5 ] },       { "key": "col3", "value": [ "row4" ] }]
        ]
      ]
    },
    {
      "name": "Inner join, with 2 sub queries, asterisk select",
      "query": [
        "select * ",
        "from source s ",
        "inner populate join ",
        "(",
        "  select t.row_id, a.col3, t.col1 ",
        "  from \"table\" t ",
        "  left join article a ",
        "    on a.col1 = t.row_id ",
        ") x ",
        "  on x.col1 = s.col1 ",
        "inner populate join ",
        "(",
        "  select a.col3, t.row_id, t.col1 ",
        "  from \"table\" t ",
        "  left join article a ",
        "    on a.col1 = t.row_id ",
        ") x1 ",
        "  on x1.col1 = s.col1 ",
        "order by s.col1"
      ],
      "expectedResultSets": [
        [
          [{ "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "x", "value": [ { "row_id": 1, "col3": "row1", "col1": 1 }, { "row_id": 2, "col3": null, "col1": 1 } ] }, { "key": "x1", "value": [ { "col3": "row1", "row_id": 1, "col1": 1 }, { "col3": null, "row_id": 2, "col1": 1 } ] }],
          [{ "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "x", "value": [ { "row_id": 3, "col3": "row2", "col1": 3 }, { "row_id": 4, "col3": null, "col1": 3 }, { "row_id": 5, "col3": null, "col1": 3 } ] }, { "key": "x1", "value": [ { "col3": "row2", "row_id": 3, "col1": 3 }, { "col3": null, "row_id": 4, "col1": 3 }, { "col3": null, "row_id": 5, "col1": 3 } ] }],
          [{ "key": "col1", "value": 5 }, { "key": "col2", "value": 6 }, { "key": "x", "value": [ { "row_id": 6, "col3": "row4", "col1": 5 } ] }, { "key": "x1", "value": [ { "col3": "row4", "row_id": 6, "col1": 5 } ] }]
        ]
      ]
    },
    {
      "name": "Left join, asterisk select",
      "query": [
        "select * ",
        "from source s ",
        "left join article a ",
        "  on a.col1 = s.col1"   
      ],
      "expectedResultSets": [
        [
          [{ "key": "col1", "value": 1 }, { "key": "col2", "value": 2 }, { "key": "col1", "value": 1 },    { "key": "col2", "value": 2 },    { "key": "col3", "value": "row1" }, { "key": "art_id", "value": 1 }],
          [{ "key": "col1", "value": 3 }, { "key": "col2", "value": 4 }, { "key": "col1", "value": 3 },    { "key": "col2", "value": 4 },    { "key": "col3", "value": "row2" }, { "key": "art_id", "value": 2 }],
          [{ "key": "col1", "value": 5 }, { "key": "col2", "value": 6 }, { "key": "col1", "value": null }, { "key": "col2", "value": null }, { "key": "col3", "value": null },   { "key": "art_id", "value": null }]
        ]
      ]
    },
    {
      "name": "totable",
      "query": [
        "select s.id, sh.sku_id, sh.wareh_id, sh.qty ",
        "from shopcart s ",
        "cross apply (totable(s.stockhouses)) sh ",
        "where s.id <= 301 "
      ],
      "expectedResultSets": [
        [
          [{ "key": "id", "value": 101 }, { "key": "sku_id", "value": 1 }, { "key": "wareh_id", "value": 1 }, { "key": "qty", "value": 1 }],
          [{ "key": "id", "value": 101 }, { "key": "sku_id", "value": 2 }, { "key": "wareh_id", "value": 1 }, { "key": "qty", "value": 2 }],
          [{ "key": "id", "value": 201 }, { "key": "sku_id", "value": 2 }, { "key": "wareh_id", "value": 2 }, { "key": "qty", "value": 1 }],
          [{ "key": "id", "value": 201 }, { "key": "sku_id", "value": 3 }, { "key": "wareh_id", "value": 1 }, { "key": "qty", "value": 1 }],
          [{ "key": "id", "value": 301 }, { "key": "sku_id", "value": 1 }, { "key": "wareh_id", "value": 1 }, { "key": "qty", "value": 1 }],
          [{ "key": "id", "value": 301 }, { "key": "sku_id", "value": 3 }, { "key": "wareh_id", "value": 2 }, { "key": "qty", "value": 2 }]
        ]
      ]
    },
    {
      "name": "Subquery with asterisk alias select",
      "query": [
        "select reservation.* ",
        "from ",
        "( ",
        "  select * ",
        "  from reservation rs ",
        "  cross apply (totable(rs.stockhouses)) sh",
        ") reservation "
      ],
      "expectedResultSets": [
        [
          [{ "key": "index", "value": "idx1" },{ "key": "id", "value": 1 },{ "key": "stockhouses", "value": [{"wareh_id": 1, "qty": 1}] },{ "key": "wareh_id", "value": 1 },{ "key": "qty", "value": 1 }],
          [{ "key": "index", "value": "idx2" },{ "key": "id", "value": 2 },{ "key": "stockhouses", "value": [{"wareh_id": 2, "qty": 1}] },{ "key": "wareh_id", "value": 2 },{ "key": "qty", "value": 1 }]
        ]
      ]
    },
    {
      "name": "Subquery with asterisk select",
      "query": [
        "select * ",
        "from ",
        "( ",
        "  select * ",
        "  from reservation rs ",
        "  cross apply (totable(rs.stockhouses)) sh",
        ") reservation "
      ],
      "expectedResultSets": [
        [
          [{ "key": "index", "value": "idx1" },{ "key": "id", "value": 1 },{ "key": "stockhouses", "value": [{"wareh_id": 1, "qty": 1}] },{ "key": "wareh_id", "value": 1 },{ "key": "qty", "value": 1 }],
          [{ "key": "index", "value": "idx2" },{ "key": "id", "value": 2 },{ "key": "stockhouses", "value": [{"wareh_id": 2, "qty": 1}] },{ "key": "wareh_id", "value": 2 },{ "key": "qty", "value": 1 }]
        ]
      ]
    },
    {
      "name": "Group by with subquery",
      "query": [
        "select reservation.index, reservation.id, reservation.wareh_id ",
        "from ",
        "( ",
        "  select rs.index, rs.id, sh.wareh_id ",
        "  from reservation rs ",
        "  cross apply (totable(rs.stockhouses)) sh",
        "  group by rs.index, rs.id, sh.wareh_id ",
        ") reservation "
      ],
      "expectedResultSets": [
        [
          [{ "key": "index", "value": "idx1" },{ "key": "id", "value": 1 },{ "key": "wareh_id", "value": 1 }],
          [{ "key": "index", "value": "idx2" },{ "key": "id", "value": 2 },{ "key": "wareh_id", "value": 2 }]
        ]
      ]
    },
    {
      "name": "Group by without subquery",
      "query": [
        "select rs.index, rs.id, sh.wareh_id ",
        "from reservation rs ",
        "cross apply (totable(rs.stockhouses)) sh",
        "group by rs.index, rs.id, sh.wareh_id "
      ],
      "expectedResultSets": [
        [
          [{ "key": "index", "value": "idx1" },{ "key": "id", "value": 1 },{ "key": "wareh_id", "value": 1 }],
          [{ "key": "index", "value": "idx2" },{ "key": "id", "value": 2 },{ "key": "wareh_id", "value": 2 }]
        ]
      ]
    },
    {
      "name": "Subquery with same inner and outer alias, schema full",
      "schemaLess": false,
      "query": [
        "select s.id, s.index, s.wareh_id, s.qty ",
        "from ",
        "( ",
        "  select *",
        "  from shopcart s ",
        "  cross apply (totable(s.stockhouses)) sh ",
        "  where s.id = 101 ",
        ") s "
      ],
      "expectedResultSets": [
        [
          [{ "key": "id", "value": 101 },{ "key": "index", "value": "idx1" },{ "key": "wareh_id", "value": 1 },{ "key": "qty", "value": 1 }],
          [{ "key": "id", "value": 101 },{ "key": "index", "value": "idx1" },{ "key": "wareh_id", "value": 1 },{ "key": "qty", "value": 2 }]
        ]
      ]
    },
    {
      "name": "Subquery with same inner and outer alias, schema less",
      "schemaLess": true,
      "query": [
        "select s.id, s.index, s.wareh_id, s.qty ",
        "from ",
        "( ",
        "  select s.id, s.index, sh.wareh_id, sh.qty ",
        "  from shopcart s ",
        "  cross apply (totable(s.stockhouses)) sh ",
        "  where s.id = 101 ",
        ") s "
      ],
      "expectedResultSets": [
        [
          [{ "key": "id", "value": 101 },{ "key": "index", "value": "idx1" },{ "key": "wareh_id", "value": 1 },{ "key": "qty", "value": 1 }],
          [{ "key": "id", "value": 101 },{ "key": "index", "value": "idx1" },{ "key": "wareh_id", "value": 1 },{ "key": "qty", "value": 2 }]
        ]
      ]
    },
    {
      "name": "Subquery 2",
      "query": [
        "select shopcart.index, shopcart.sku_id, shopcart.wareh_id, shopcart.qty ",
        "from ",
        "( ",
        "  select s.index, sh.sku_id, sh.wareh_id, sum(sh.qty) qty",
        "  from shopcart s ",
        "  cross apply (totable(s.stockhouses)) sh",
        "  group by s.index, sh.sku_id, sh.wareh_id ",
        ") shopcart ",
        "order by index, sku_id "
      ],
      "expectedResultSets": [
        [
          [{ "key": "index", "value": "idx1" },{ "key": "sku_id", "value": 1 },{ "key": "wareh_id", "value": 1 },{ "key": "qty", "value": 2 }],
          [{ "key": "index", "value": "idx1" },{ "key": "sku_id", "value": 2 },{ "key": "wareh_id", "value": 1 },{ "key": "qty", "value": 2 }],
          [{ "key": "index", "value": "idx1" },{ "key": "sku_id", "value": 2 },{ "key": "wareh_id", "value": 2 },{ "key": "qty", "value": 1 }],
          [{ "key": "index", "value": "idx1" },{ "key": "sku_id", "value": 3 },{ "key": "wareh_id", "value": 1 },{ "key": "qty", "value": 3 }],
          [{ "key": "index", "value": "idx2" },{ "key": "sku_id", "value": 1 },{ "key": "wareh_id", "value": 1 },{ "key": "qty", "value": 1 }],
          [{ "key": "index", "value": "idx2" },{ "key": "sku_id", "value": 3 },{ "key": "wareh_id", "value": 2 },{ "key": "qty", "value": 2 }]
        ]
      ]
    },
    {
      "name": "Join with sub query with sub query expression (object)",
      "query": [
        "select x.* ",
        "from range(1, 3) v ",
        "inner join ",
        "( ",
        "    select ",
        "    Value ",
        "    , ( ",
        "        select Value key ",
        "        for object ",
        "      ) map ",
        "    from range(1, 3) ",
        ") x ",
        "  on  x.Value = v.Value "
      ],
      "expectedResultSets": [
        [
          [{ "key": "Value", "value": 1 },{ "key": "map", "value": { "key": 1 } }],
          [{ "key": "Value", "value": 2 },{ "key": "map", "value": { "key": 2 } }]
        ]
      ]
    },
    {
      "name": "Left joins with where predicates",
      "query": [
        "select x.Value valueX, y.Value valueY ",
        "from range(1, 3) x ",
        "left join range(2, 4) y ",
        "  on y.Value = x.Value ",
        "where y.Value is null ",
        "",
        "select x.Value valueX, y.Value valueY ",
        "from range(1, 3) x ",
        "left join range(2, 4) y ",
        "  on y.Value = x.Value ",
        "where y.Value is not null "
      ],
      "expectedResultSets": [
        [
          [{ "key": "valueX", "value": 1 }, { "key": "valueY", "value": null }]
        ],
        [
          [{ "key": "valueX", "value": 2 }, { "key": "valueY", "value": 2 }]
        ]
      ]
    },
    {
      "name": "Nested applys",
      "description": [
        "Verify that the outer context isn't cleared during nested applys when a non loop join is in between.",
        "Regression: Happend in schema full in nested loops"
      ],
      "query": [
        "--set @@printplan = true ",
        "set @@force_nested_loop = true ",
        "",
        "select * ",
        "from range (1,3) x ",
        "outer apply ( ",
        "  select * ",
        "  from range(1,3) z ",
        "  inner join pvalues p ",
        "    on p.pvalue = z.value ",
        "  cross apply range(0, p.pvalue) zz ",
        ") y"
      ],
      "expectedResultSets": [
        [
          [{ "key": "Value", "value": 1 }, { "key": "Value", "value": 1 }, { "key": "pvalue", "value": 1 }, { "key": "Value", "value": 0 }],
          [{ "key": "Value", "value": 1 }, { "key": "Value", "value": 2 }, { "key": "pvalue", "value": 2 }, { "key": "Value", "value": 0 }],
          [{ "key": "Value", "value": 1 }, { "key": "Value", "value": 2 }, { "key": "pvalue", "value": 2 }, { "key": "Value", "value": 1 }],
          [{ "key": "Value", "value": 2 }, { "key": "Value", "value": 1 }, { "key": "pvalue", "value": 1 }, { "key": "Value", "value": 0 }],
          [{ "key": "Value", "value": 2 }, { "key": "Value", "value": 2 }, { "key": "pvalue", "value": 2 }, { "key": "Value", "value": 0 }],
          [{ "key": "Value", "value": 2 }, { "key": "Value", "value": 2 }, { "key": "pvalue", "value": 2 }, { "key": "Value", "value": 1 }]
        ]
      ]
    }
  ]
}
